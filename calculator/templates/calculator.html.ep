%= javascript 'https://unpkg.com/vue/dist/vue.min.js'
%= javascript 'https://unpkg.com/axios/dist/axios.min.js'

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator!</title>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
</head>
<style>
    html, body {
        height: 100%;
    }

    body {
        background-color: rgba(20, 20, 20);
    }

    .wrapper {
    }

    #calculator {
        /*margin: auto;*/
        position: relative;
        overflow: visible;
        max-width: 460px;
        height: 70%;
        padding: 10px;
    }

    #results-box {
        /*margin: auto;*/
        padding: 20px;
        width: 90%;
        background-color: rgba(50, 50, 50, 0.8);
        height: 10%;
        border-radius: 200px;
    }

    #first-results {
        margin: auto;
        margin-right: 20px;
        color: white;
        display: flex;
        justify-content: flex-end;
        font-size: 3.5rem;
        font-family: 'Inter', sans-serif;
    }

    #second-results {
        margin: auto;
        margin-right: 20px;
        color: white;
        display: flex;
        justify-content: flex-end;
        font-size: 3.5rem;
        font-family: 'Inter', sans-serif;
        display: none;
    }

    #number-grid {
        margin: auto;
        margin-top: 10px;
        display: grid;
        grid-gap: 15px;
        grid-template-columns: auto auto auto;
        width: 93.9%;
    }
    
    .calc-button {
        border: 2px solid rgba(230, 230, 230, 0);
        padding-top: 20%;
        padding-bottom: 20%;
        text-align: center;
        background-color: rgba(70, 70, 70, 0.8);
        font-family: 'Inter', sans-serif;
        font-size: 3rem;
        border-radius: 200px;
        color: rgba(230, 230, 230)
    }

    .calc-button:hover {
        background-color: rgba(120, 120, 120, 0.8);
        transition: 0.05s;
    }
    
    .calc-button:active {
        background-color: rgba(200, 200, 200, 0.8);
    }

    #zero-button {
        grid-area: 5 / 1 / span 1 / span 2;
        border: 2px solid rgba(230, 230, 230, 0);
        padding: 10%;
        font-family: 'Inter', sans-serif;
        font-size: 3rem;
        text-align: center;
        background-color: rgba(70, 70, 70, 0.8);
        border-radius: 200px;
        color: rgba(230, 230, 230)
    }

    #zero-button:hover {
        background-color: rgba(120, 120, 120, 0.8);
        transition: 0.05s;
    }
    
    #zero-button:active {
        background-color: rgba(200, 200, 200, 0.8);
    }

    #dot {
        grid-area: 5 / 3;
        border: 2px solid rgba(230, 230, 230, 0);
        padding: 20%;
        font-family: 'Inter', sans-serif;
        font-size: 3rem;
        font-weight: 600;
        text-align: center;
        background-color: rgba(70, 70, 70, 0.8);
        border-radius: 200px;
        color: rgba(230, 230, 230)
    }

    #dot:hover {
        background-color: rgba(120, 120, 120, 0.8);
        transition: 0.05s;
    }
    
    #dot:active {
        background-color: rgba(200, 200, 200, 0.8);
    }

    #operator {
        background-color: rgba(255, 165, 0);
    }

    #operator:hover {
        background-color: rgba(255, 200, 0, 0.95);
        transition: 0.05s;
    }
    
    #operator:active {
        background-color: rgba(255, 230, 0);
    }

    .history {
        position: absolute;
        top: 0;
        left: 500;
        padding: 3px;
        font-family: 'Inter', sans-serif;
        font-size: 2rem;
        color: rgba(240, 240, 240, 0.7);
    }

    @media (max-width: 958px) {
        .history {
            position: relative;
            left: 0;
        }
    }    
</style>
<body>
    <div class="wrapper">
        <div id="calculator">
            <div id="results-box">
                <!--<p id="results"></p>-->

                <!-- rename to first-num and second-num!!! -->
                <p id="first-results">{{ currentNum }}</p>
                <p id="second-results">0</p>
            </div>
            <div id="number-grid">
                <button @click="onOperatorClick('//')" type="submit" class="calc-button" value="/" id="operator"
                    style="grid-area: 1 / 4;font-size:2.5rem;">รท</button>
                <button @click="onOperatorClick('*')" type="submit" class="calc-button" value="*" id="operator"
                    style="grid-area: 2 / 4;font-size:2.5rem;">x</button>
                <button @click="onOperatorClick('-')" type="submit" class="calc-button" value="-" id="operator"
                    style="grid-area: 3 / 4;">-</button>
                <button @click="onOperatorClick('+')" type="submit" class="calc-button" value="+" id="operator"
                    style="grid-area: 4 / 4;">+</button>
                <button @click="onEquals" type="submit" class="calc-button" value="=" id="operator"
                    style="grid-area: 5 / 4;font-size:2.5rem;">=</button>
                <button @click="onClearClick" type="submit" id="C" class="calc-button" value="C">C</button>
                <button type="submit" id="negate" class="calc-button" value="negate" style="font-size:1.75rem;">+/-</button>
                <button @click="onOperatorClick('%')" type="submit" id="mod" class="calc-button" value="%" style="font-size:2.2rem;">%</button>
                <button @click="onNumClick('7')" type="submit" id="7" class="calc-button" value="7">7</button>
                <button @click="onNumClick('8')" type="submit" id="8" class="calc-button" value="8">8</button>
                <button @click="onNumClick('9')" type="submit" id="9" class="calc-button" value="9">9</button>  
                <button @click="onNumClick('4')" type="submit" id="4" class="calc-button" value="4">4</button>
                <button @click="onNumClick('5')" type="submit" id="5" class="calc-button" value="5">5</button>
                <button @click="onNumClick('6')" type="submit" id="6" class="calc-button" value="6">6</button>  
                <button @click="onNumClick('1')" type="submit" id="1" class="calc-button" value="1">1</button>
                <button @click="onNumClick('2')" type="submit" id="2" class="calc-button" value="2">2</button>
                <button @click="onNumClick('3')" type="submit" id="3" class="calc-button" value="3">3</button>  
                <button @click="onNumClick('0')" type="submit" id="zero-button" value="0">0</button>
                <button @click="onNumClick('.')" type="submit" id="dot" value=".">.</button>
            </div>
        </div>
        <div class="history">
            <p>History</p>
        </div>
    </div>
    <script>
        new Vue({
            el: '#calculator',
            data: {
                currentNum: "",
                num1: 0,
                num2: 0,
                operator: '',
                onSecondNum: false,
                equalsApiCalled: false,
            },
            methods: {
                onNumClick(e) {
                    let num = this.currentNum.concat(e)
                    this.currentNum = num
                },
                onOperatorClick(e) {
                    if(this.onSecondNum === false) {
                        if(this.operator != '') {
                            this.num2 = Number(this.currentNum)
                        } else {
                            this.num1 = Number(this.currentNum)
                        }
                        this.equalsApiCalled = false
                        this.num1 = Number(this.currentNum)
                        this.operator = e
                        this.onSecondNum = true
                        console.log("Num 1: ", this.num1)
                        console.log("Num 2: ", this.num2)
                        console.log("Operator: ", this.operator)
                        console.log("On Second Num: ", this.onSecondNum)
                        console.log("Equals Api Called: ", this.equalsApiCalled)
                    } else {
                        /*if(this.equalsApiCalled === true) {
                            this.num2 = 0
                            this.equalsApiCalled = false
                        } else {
                            this.num2 = Number(this.currentNum)
                            this.equalsApiCalled = false
                        }*/
                        if(this.operator != '') {
                            this.num1 = Number(this.currentNum)
                        } else {
                            this.num2 = Number(this.currentNum)
                        }
                        this.equalsApiCalled = false
                        this.operator = e
                        this.onSecondNum = false
                        console.log("Num 1: ", this.num1)
                        console.log("Num 2: ", this.num2)
                        console.log("Operator: ", this.operator)
                        console.log("On Second Num: ", this.onSecondNum)
                        console.log("Equals Api Called: ", this.equalsApiCalled)
                    }
                    const requestData = { 
                        num1: this.num1,
                        num2: this.num2,
                        operator: this.operator
                    }
                    axios.post('/calculate', requestData)
                        .then(response => {
                            console.log('API response:', response.data);
                        })
                        .catch(error => {
                            console.error('Error sending data:', error);
                        });
                    this.currentNum = ''
                },
                onClearClick() {
                    location.reload()
                },
                onEquals() {
                    if(this.equalsApiCalled === false) {
                        if(this.onSecondNum === false) {
                            this.num2 = Number(this.currentNum)
                            const requestData = {
                                num1: this.num1,
                                num2: this.num2,
                                operator: this.operator,
                            }
                            axios.post('/calculate', requestData)
                                .then(response => {
                                    this.equalsApiCalled = true
                                    console.log('API response:', response.data)
                                    this.currentNum = response.data.result
                                    this.num2 = response.data.result
                                })
                                .catch(error => {
                                    console.error('Error sending data:', error)
                                });
                            console.log("Num 1: ", this.num1)
                            console.log("Num 2: ", this.num2)
                            console.log("Operator: ", this.operator)
                            console.log("On Second Num: ", this.onSecondNum)
                            console.log("Equals Api Called: ", this.equalsApiCalled)
                        } else {
                            this.num2 = Number(this.currentNum)
                            const requestData = {
                                num1: this.num1,
                                num2: this.num2,
                                operator: this.operator
                            }
                            axios.post('/calculate', requestData)
                                .then(response => {
                                    this.equalsApiCalled = true
                                    console.log('API response:', response.data)
                                    this.currentNum = response.data.result
                                    this.num1 = response.data.result
                                })
                                .catch(error => {
                                    console.error('Error sending data:', error)
                                });
                            console.log("Num 1: ", this.num1)
                            console.log("Num 2: ", this.num2)
                            console.log("Operator: ", this.operator)
                            console.log("On Second Num: ", this.onSecondNum)
                            console.log("Equals Api Called: ", this.equalsApiCalled)    
                        }
                    } else {
                        if(this.onSecondNum === false) {
                            const requestData = { 
                                num1: this.num1,
                                num2: this.num2,
                                operator: this.operator
                            }
                            axios.post('/calculate', requestData)
                                .then(response => {
                                    console.log('API response:', response.data)
                                    this.currentNum = response.data.result
                                    this.num2 = response.data.result
                                })
                                .catch(error => {
                                    console.error('Error sending data:', error)
                                });
                            console.log("Num 1: ", this.num1)
                            console.log("Num 2: ", this.num2)
                            console.log("Operator: ", this.operator)
                            console.log("On Second Num: ", this.onSecondNum)
                            console.log("Equals Api Called: ", this.equalsApiCalled)    
                        } else {
                            console.log(this.num2)
                            console.log(this.operator)
                            const requestData = { 
                                num1: this.num1,
                                num2: this.num2,
                                operator: this.operator
                            }
                            axios.post('/calculate', requestData)
                                .then(response => {
                                    console.log('API response:', response.data)
                                    this.currentNum = response.data.result
                                    this.num1 = response.data.result
                                })
                                .catch(error => {
                                    console.error('Error sending data:', error)
                                });
                            console.log("Num 1: ", this.num1)
                            console.log("Num 2: ", this.num2)
                            console.log("Operator: ", this.operator)
                            console.log("On Second Num: ", this.onSecondNum)
                            console.log("Equals Api Called: ", this.equalsApiCalled)
                        }
                    }
                    /*const requestData = { 
                        num1: this.num1,
                        num2: this.num2,
                        operator: this.operator
                    }*/
                }
            }
        });
    </script>
</body>
</html>